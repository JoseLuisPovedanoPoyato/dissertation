INSTALL DOCKER AND KUBERNETES
-----------------------------------------
Follow this to complete docker setup
https://www.letscloud.io/community/how-to-install-kubernetesk8s-and-docker-on-ubuntu-2004
Follow this to complete Kubernetes set up
https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/


ACTIVATE DOCKER IN LINUX
------------------------------------------
sudo systemctl enable docker
sudo systemctl start docker
sudo systemctl status docker

TO BUILD DOCKER IMAGE AND MAKE IT AVAILABLE IN KUBE
------------------------------------------------------
docker rmi $IMAGE_NAME:IMAGE_VERSION
docker build -t $IMAGE_NAME:IMAGE_VERSION .
kind load docker-image $IMAGE_NAME:IMAGE_VERSION


TO LAUNCH SERVICE ON DOCKER CONTAINER
------------------------------------------------------
docker stop $CONTAINER
docker rm $CONTAINER
docker rmi $IMAGE_NAME:IMAGE_VERSION
docker build -t $IMAGE_NAME:IMAGE_VERSION .
docker run -p $INTERNAL_PORT:$EXTERNAL_PORT --name $IMAGE_NAME $IMAGE_NAME:IMAGE_VERSION
	- docker run -p 8000:8000 --name MicroCounter microcounter:1.0
	- docker run -p 8000:8000 --name RequestGenerator requestgenerator:1.0
sudo kind load docker-image microreceiver:1.0


KUBERNETES CLUSTER COMMANDS
----------------------------------------------
kubectl create -f $MANIFEST.yml
kubectl describe pods/$POD_NAME 

kubectl get pods
kubectl get pods/$POD_NAME
kubectl describe pods/$POD_NAME
kubectl get services

//Opens pod in bash
kubectl exec -it $POD_NAME bash 
// Above is deprecated, Doc recommends
kubectl exec --stdin --tty $CONTAINER -- /bin/bash

// Port forward to localhost
kubectl port-forward $POD_NAME $TARGET_PORT:$FORWARDED_PORT //For some reason only works if $TARGET_PORT = $FORWARDED_PORT


SEND DATA REQUESTS
-------------------------------------------
// SSH into pod
kubectl exec --stdin --tty $CONTAINER -- /bin/bash

// Send GET request
curl $SERVICE-URL
curl http://micro-counter-service/home

// Send Post Request
apt update / apt-get vim / vim request.txt - {"count" : 0, "max_count" : 2000} 

curl -X POST -H "Content-Type: application/json" -d @request.txt http://micro-counter-service/count
ab -p request.txt -T application/json -c 1 -n 10 -v 4 http://micro-counter-service/count


MICROCOUNTER COMMANDS
----------------------------------------------
cd .\MicroCounterService\

sudo docker stop MicroCounter
sudo docker rm MicroCounter
sudo docker rmi microcounter:1.0
sudo docker build -t microcounter:1.0 .
sudo kind load docker-image microcounter:1.0

kubectl delete deployments/micro-counter-deployment
kubectl delete services/micro-counter-service
sudo kubectl create -f bare_counter_manifest.yml
kubectl get pods

//SSH into pod
kubectl exec --stdin --tty micro-counter-deployment$POD_NUMBER -- /bin/bash


REQUEST LOAD GENERATOR COMMANDS
------------------------------------------
sudo docker rmi requestgenerator:1.0
sudo docker build -t requestgenerator:1.0 .
sudo kind load docker-image requestgenerator:1.0

kubectl delete deployments/request-generator
sudo kubectl create -f request_gen_manifest.yml
kubectl get pods

//SSH into pod
kubectl exec --stdin --tty request-generator$POD_NUMBER -- /bin/bash

// Send Post Request
apt update / apt-get vim / vim request.txt - {"count" : 0, "max_count" : 2000} 

curl -X POST -H "Content-Type: application/json" -d @request.txt http://micro-counter-service/count
ab -p request_1.json -T application/json -c 1 -n 10 -v 4 http://micro-counter-service/count

# Node Exporter queries
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=node_cpu_seconds_total[10s]'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum by (mode, instance) (rate(node_cpu_seconds_total{job="node"}[1m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(node_cpu_seconds_total[10s])' 

curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=node_memory_MemFree_bytes[10s]'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(node_memory_MemTotal_bytes[10s])) - sum(avg_over_time(node_memory_MemFree_bytes[10s]))'

curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=node_cpu_seconds_total{container_label_io_kubernetes_container_name=""}[10s]'
// With Regular Expression
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=container_cpu_usage_seconds_total{container_label_io_kubernetes_container_name=~".*-proxy"}[10s]'

//Linkerd targetting requests
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=container_cpu_usage_seconds_total{container_label_io_kubernetes_container_name="linkerd-proxy"}[10s]' # Works
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=container_cpu_usage_seconds_total{container_label_io_kubernetes_container_name="linkerd-init"}[10s]' # Does not work -> Not a regular container but an init container, might have to figure out a diff way to measure it

//Istio targetting requests
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=container_cpu_usage_seconds_total{container_label_io_kubernetes_container_name="istio-proxy"}[10s]'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=container_cpu_usage_seconds_total{container_label_io_kubernetes_container_name="linkerd-init"}[10s]'

//Combined Measurements
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=container_cpu_usage_seconds_total{container_label_io_kubernetes_container_name=~"(linkerd|istio)-proxy"}[10s]' # Works for Linkerd

// Sum of measurements
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(rate(container_cpu_usage_seconds_total{container_label_io_kubernetes_container_name=~"(linkerd|istio)-proxy"}[10s]))' # Works for Linkerd
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(rate(container_cpu_usage_seconds_total{container_label_io_kubernetes_pod_namespace=~"istio-system"}[10s]))'

// Memory Usage ones
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=container_memory_usage_bytes{container_label_io_kubernetes_container_name=~"(linkerd|istio)-proxy"}[10s]'

curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_container_name=~"(linkerd|istio)-proxy"}[10s]))'

// Run the following 3 together to get Overall Usage (NodeExporter) + Counter Usage + Proxy Usage
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(node_memory_MemTotal_bytes[5m])) - sum(avg_over_time(node_memory_MemFree_bytes[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_container_name=~".*"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_container_name=~"(micro-counter)|(benchmark-controller)|(request-generator)"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_pod_namespace=~"(monitoring)|(cadvisor)"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_pod_namespace=~"(kube-system)|(kube-public)|(kube-node-lease)|(local-path-storage)"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_container_name=~"(linkerd|istio)-proxy"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_pod_namespace=~"(linkerd|istio-system)"}[5m]))'


curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_pod_namespace=~"default"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{id=~"/kubelet.*", container_label_io_kubernetes_pod_namespace=~"default"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_pod_namespace=~"default"}[5m])) by (container_label_io_kubernetes_pod_name, container_label_io_kubernetes_container_name))'

curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_container_name=~".*", id=~"/docker.*"}[10s]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_container_name=~".*", id=~"/kubelet.slice/.*"}[10s]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_container_name=~".*"}[10s]))'


curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=avg_over_time(container_memory_usage_bytes{id=~"/kubelet.slice/.*",container_label_io_kubernetes_container_name=~"(linkerd|istio)-proxy"}[5m])'

curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=avg_over_time(container_memory_usage_bytes{id=~"/kubelet.slice/.*",container_label_io_kubernetes_pod_namespace=~".*"}[5m])'

curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(node_memory_MemTotal_bytes[5m])) - sum(avg_over_time(node_memory_MemFree_bytes[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_pod_namespace=~".*"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{id=~"/",container_label_io_kubernetes_pod_namespace=~".*"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{id=~"/kubelet.slice/.*",container_label_io_kubernetes_pod_namespace=~".*"}[5m]))'
curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=sum(avg_over_time(container_memory_usage_bytes{id=~"/docker.*",container_label_io_kubernetes_pod_namespace=~".*"}[5m]))'



curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=avg_over_time(container_memory_usage_bytes{id=~"/",container_label_io_kubernetes_pod_namespace=~".*"}[5m])'

9842841828.686974
6437807874.5685625
1702518614.4556909
1702515339.6627202

curl -X POST http://prometheus:9090/api/v1/query -H 'Content-Type: application/x-www-form-urlencoded' -d 'query=avg_over_time(container_memory_usage_bytes{container_label_io_kubernetes_pod_namespace=~".*"}[5m])'

11689339904.000004
 9758534911.887028
 1673010859.616109

curl http://localhost:5000/send_requests

- 19:21 (72s) -




