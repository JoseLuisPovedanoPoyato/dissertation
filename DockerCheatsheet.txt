INSTALL DOCKER AND KUBERNETES
-----------------------------------------
Follow this to complete docker setup
https://www.letscloud.io/community/how-to-install-kubernetesk8s-and-docker-on-ubuntu-2004
Follow this to complete Kubernetes set up
https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/


ACTIVATE DOCKER IN LINUX
------------------------------------------
sudo systemctl enable docker
sudo systemctl start docker
sudo systemctl status docker

TO BUILD DOCKER IMAGE AND MAKE IT AVAILABLE IN KUBE
------------------------------------------------------
docker rmi $IMAGE_NAME:IMAGE_VERSION
docker build -t $IMAGE_NAME:IMAGE_VERSION .
kind load docker-image $IMAGE_NAME:IMAGE_VERSION


TO LAUNCH SERVICE ON DOCKER CONTAINER
------------------------------------------------------
docker stop $CONTAINER
docker rm $CONTAINER
docker rmi $IMAGE_NAME:IMAGE_VERSION
docker build -t $IMAGE_NAME:IMAGE_VERSION .
docker run -p $INTERNAL_PORT:$EXTERNAL_PORT --name $IMAGE_NAME $IMAGE_NAME:IMAGE_VERSION

E.G To Launch Sender on Docker
-----------------------------
cd .\MicroServiceSender\
docker stop MicroSender
docker rm MicroSender
docker rmi microsender:1.0
docker build -t microsender:1.0 .
docker run -p 5000:5000 --name MicroSender microsender:1.0


To Launch Receiver on Docker and add image to Kubernetes images
-----------------------------
cd .\MicroServiceReceiver\
docker stop MicroReceiver
docker rm MicroReceiver
docker rmi microreceiver:1.0
docker build -t microreceiver:1.0 .
sudo kind load docker-image microreceiver:1.0
docker run -p 8000:8000 --name MicroReceiver microreceiver:1.0




KUBERNETES CLUSTER COMMANDS
----------------------------------------------
kubectl create -f $MANIFEST.yml
kubectl describe pods/$POD_NAME 

kubectl get pods
kubectl get pods/$POD_NAME
kubectl describe pods/$POD_NAME
kubectl get services

//Opens pod in bash
kubectl exec -it $POD_NAME bash 
// Above is deprecated, Doc recommends
kubectl exec --stdin --tty $CONTAINER -- /bin/bash

// Port forward to localhost
kubectl port-forward $POD_NAME $TARGET_PORT:$FORWARDED_PORT //For some reason only works if $TARGET_PORT = $FORWARDED_PORT


SEND DATA REQUESTS
-------------------------------------------
// SSH into pod
kubectl exec --stdin --tty $CONTAINER -- /bin/bash

// Send GET request
curl $SERVICE-URL
curl http://micro-counter-service/home

// Send Post Request
apt update / apt-get vim / vim request.txt - {"count" : 0, "max_count" : 2000} 

curl -X POST -H "Content-Type: application/json" -d @request.txt http://micro-counter-service/count
ab -p request.txt -T application/json -c 1 -n 10 -v 4 http://micro-counter-service/count


MICROCOUNTER COMMANDS
----------------------------------------------
cd .\MicroCounterService\

// Launch pod and service
kubectl delete deployments/micro-counter-deployment
kubectl delete services/micro-counter-service
kubectl create -f kube_manifest.yml
kubectl get pods

//SSH into pod
kubectl exec --stdin --tty micro-receiver-deployment$POD_NUMBER -- /bin/bash

// Send Post Request
apt update / apt-get vim / vim request.txt - {"count" : 0, "max_count" : 2000} 

curl -X POST -H "Content-Type: application/json" -d @request.txt http://micro-counter-service/count
ab -p request.txt -T application/json -c 1 -n 10 -v 4 http://micro-counter-service/count

